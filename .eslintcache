[{"H:\\prods\\christmasshow2020\\src\\index.js":"1","H:\\prods\\christmasshow2020\\src\\App.js":"2","H:\\prods\\christmasshow2020\\src\\reportWebVitals.js":"3","H:\\prods\\christmasshow2020\\src\\views\\newGame\\main.js":"4","H:\\prods\\christmasshow2020\\src\\views\\newGame\\components\\newGame\\main.js":"5","H:\\prods\\christmasshow2020\\src\\views\\waiting\\main.js":"6","H:\\prods\\christmasshow2020\\src\\views\\newGame\\components\\joinGame\\main.js":"7","H:\\prods\\christmasshow2020\\src\\views\\connectedWaiting\\main.js":"8","H:\\prods\\christmasshow2020\\src\\views\\videoWatching\\main.js":"9"},{"size":500,"mtime":499162500000,"results":"10","hashOfConfig":"11"},{"size":6612,"mtime":1608714282805,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":1652,"mtime":1608597043347,"results":"14","hashOfConfig":"11"},{"size":1426,"mtime":1608599412997,"results":"15","hashOfConfig":"11"},{"size":1422,"mtime":1608684103287,"results":"16","hashOfConfig":"11"},{"size":1778,"mtime":1608599458296,"results":"17","hashOfConfig":"11"},{"size":4328,"mtime":1608897817209,"results":"18","hashOfConfig":"11"},{"size":537,"mtime":1608714309232,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"bqrvxg",{"filePath":"23","messages":"24","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"22"},"H:\\prods\\christmasshow2020\\src\\index.js",[],["44","45"],"H:\\prods\\christmasshow2020\\src\\App.js",["46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64"],"import logo from \"./logo.svg\";\nimport \"./App.css\";\n\nimport react from \"react\";\n\nimport NewGame from \"./views/newGame/main\";\n\nimport WaitingRoom from \"./views/waiting/main\";\n\nimport ConnectedWaiting from \"./views/connectedWaiting/main\";\n\n\nimport VideoWatching from \"./views/videoWatching/main\"\n\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nclass App extends react.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      backgroundColor:'black',\n      categories: [],\n      roomData: null,\n      connectedUsers: [\n        {\n          nickName: \"annon\",\n          socketIDs: [1, 2],\n        },\n      ],\n      isConnected: false,\n      connectedRoom: null,\n\n      waitingMessagesArr: [{\n        value:\"hello world\"\n      }],\n\n      waitingRoomTVTitle:\"Waiting Room:\",\n\n      tvWaiting:'main',\n      videoVal:'',\n      isPlaying:false,\n     };\n  }\n\n  componentDidMount() {\n    //establish connection to socket\n\n    //lets generate a rootid\n\n    let guid = () => {\n      let s4 = () => {\n        return Math.floor((1 + Math.random()) * 0x10000)\n          .toString(16)\n          .substring(1);\n      };\n      //return id of format 'aaaaaaaa'-'aaaa'-'aaaa'-'aaaa'-'aaaaaaaaaaaa'\n      return (\n        s4() +\n        s4() +\n        \"-\" +\n        s4() +\n        \"-\" +\n        s4() +\n        \"-\" +\n        s4() +\n        \"-\" +\n        s4() +\n        s4() +\n        s4()\n      );\n    };\n\n    if (localStorage.getItem(\"genid\") == null) {\n      var rid = guid();\n      localStorage.setItem(\"genid\", rid);\n    } else {\n      var genid = localStorage.getItem(\"genid\");\n\n      console.log(genid);\n    }\n\n    // client-side\n    const io = require(\"socket.io-client\");\n    const socket = io(\"192.168.0.20:3000\", {\n      withCredentials: false,\n      extraHeaders: {\n        \"my-custom-header\": \"abcd\",\n      },\n    });\n\n    this.socket = socket;\n\n    socket.on(\"WAITINGMESSAGEres\", (msg) => {\n \n\n      if (this.state.roomData == undefined) {\n        console.log(\"messenger\");\n      } else {\n        //the tv\n        console.log(this.state.roomData);\n        console.log(msg);\n\n        if (this.state.roomData.roomID == msg.roomID) {\n          var allMessages = this.state.waitingMessagesArr;\n\n\n          if(msg.data.msg[0]==\">\"){\n            var command= msg.data.msg.split(\">\");\n\n            if(command[1]==\"video\"){\n              this.setState({\n                tvWaiting:\"video\",\n                videoVal:command[2]\n              })\n            }else if(command[1]==\"play\"){\n              this.setState({\n                isPlaying:true\n              })\n            }else if(command[1]==\"pause\"){\n              this.setState({\n                isPlaying:false\n              })\n            }\n          }\n\n          if(msg.data.msg[0]==\":\"){\n            var command= msg.data.msg.split(\":\");\n            if(command[1]==\"bg\"){\n              var val= command[2];\n              this.setState({\n                backgroundColor:val\n              })\n            }\n\n            if(command[1]==\"main\"){\n              this.setState({\n                tvWaiting:\"main\"\n              })\n            }\n\n            \n          }\n\n          allMessages.push({\n            value: msg.data.msg,\n            data: msg,\n            senderData:msg.senderData.playerData.nickName\n          });\n\n          this.setState({\n            waitingMessagesArr: allMessages.reverse(),\n          });\n          console.log(\"message received on room\");\n          console.log(msg.data.msg);\n        }\n        console.log(\"reciever\");\n      }\n    });\n\n    socket.on(\"playerConnected\", (msg) => {\n      if (this.state.roomData == null) {\n        //were not waiting so lets ignore the connected user\n      } else {\n        //update connection list\n        var roomID = this.state.roomData.roomID;\n        if (roomID == msg.roomID) {\n          var connectedUsers = [];\n\n          for (var user in msg.user.connectedUsers) {\n            var data = msg.user.connectedUsers[user].playerData;\n            connectedUsers.push({\n              nickName: data.nickName,\n              socketIDs: data.socketIDs,\n            });\n          }\n          this.setState({\n            connectedUsers: connectedUsers,\n          });\n        }\n      }\n      console.log(msg);\n    });\n\n    socket.on(\"joinRoomResponse\", (msg) => {\n      console.log(\"--->\", msg);\n      if (msg.status == \"SUCCESS\") {\n        console.log(\"connected to room lets wait\");\n        this.setState({\n          isConnected: true,\n          connectedRoom: msg.data.roomID,\n        });\n        return;\n      }\n      if (msg.status == \"ERR\") {\n        alert(msg.msg);\n      }\n    });\n\n    socket.on(\"roomCreated\", (msg) => {\n      this.setState({\n        roomData: msg,\n      });\n    });\n  }\n\n  sendMessageToSocket = (msg) => {\n    console.log(msg);\n\n    var genid = localStorage.getItem(\"genid\");\n\n    if (msg.action == \"WAIITNGMESSAGE\") {\n      console.log(\"send message\", msg.data);\n      this.socket.emit(\"WAITINGMESSAGE\", {\n        data: msg.data,\n        roomID: this.state.connectedRoom,\n        genid: genid,\n      });\n    }\n\n    if (msg.action == \"JOINROOM\") {\n      this.socket.emit(\"joinRoom\", msg);\n    }\n\n    if (msg.action == \"CREATEROOM\") {\n      this.socket.emit(\"createRoom\", msg);\n    }\n  };\n\n  render() {\n    //let\n    let renderComp = null;\n\n    if (this.state.roomData == null) {\n      if (this.state.isConnected) {\n        renderComp = (\n          <ConnectedWaiting\n             connectedRoom={this.state.connectedRoom}\n            sendMessageToSocket={this.sendMessageToSocket}\n          ></ConnectedWaiting>\n        );\n      } else {\n        renderComp = (\n          <NewGame\n            sendMessageToSocket={this.sendMessageToSocket}\n            id=\"app\"\n          ></NewGame>\n        );\n      }\n    } else {\n\n      if(this.state.tvWaiting==\"main\"){\n        renderComp = (\n          <WaitingRoom\n          waitingRoomTVTitle={this.state.waitingRoomTVTitle}\n            waitingMessagesArr={this.state.waitingMessagesArr}\n            backgroundColor={this.state.backgroundColor}\n            connectedUsers={this.state.connectedUsers}\n            roomData={this.state.roomData}\n          ></WaitingRoom>\n        );\n      }else{\n        renderComp=(\n          <VideoWatching\n          backgroundColor={this.state.backgroundColor}\n          isPlaying={this.state.isPlaying}\n          videoVal={this.state.videoVal}\n          ></VideoWatching>\n        );\n      }\n       \n    }\n\n    return (\n      <Router>\n        <Switch>\n          <Route path=\"/\">{renderComp}</Route>\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","H:\\prods\\christmasshow2020\\src\\reportWebVitals.js",[],"H:\\prods\\christmasshow2020\\src\\views\\newGame\\main.js",["65","66"],"import react from 'react';\r\nimport \"./main.css\"\r\n\r\n\r\n//all components\r\nimport NewGameView from './components/newGame/main'\r\n\r\nimport JoinGame from './components/joinGame/main'\r\n\r\nclass NewGame extends react.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            popup:\"null\"\r\n        }\r\n    }\r\n\r\n\r\n    triggerPopUpNewGame=()=>{\r\n         this.setState({\r\n            popup:\"newgame\"\r\n        })\r\n    }\r\n\r\n\r\n    triggerPopUpJoinGame=()=>{\r\n        this.setState({\r\n            popup:\"joinGame\"\r\n        })\r\n    }\r\n\r\n    render(){\r\n        let popup;\r\n        if(this.state.popup!=\"null\"){\r\n            if(this.state.popup==\"newgame\"){\r\n                popup=<div id=\"newGamePopUp\"><NewGameView sendMessageToSocket={this.props.sendMessageToSocket} ></NewGameView></div>\r\n            }else{\r\n                popup=<div id=\"newGamePopUp\">\r\n                <JoinGame sendMessageToSocket={this.props.sendMessageToSocket}></JoinGame>\r\n            </div>\r\n            }\r\n       }\r\n\r\n\r\n        return(\r\n           <div id=\"newGameContainer\">\r\n\r\n              {popup}\r\n    \r\n\r\n               <div id=\"intro\">\r\n                   <h1>Enjoy humorous laughter this christmas</h1>\r\n                   <p>Powered by https://api.maeplet.com - special thanks to Microsomes for giving us access to their api</p>\r\n               </div>\r\n\r\n                <div id=\"second\">\r\n\r\n                <button onClick={this.triggerPopUpNewGame}>New  Game</button>\r\n                <button onClick={this.triggerPopUpJoinGame}>Join Game</button>\r\n\r\n                </div>\r\n\r\n           </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default NewGame;\r\n","H:\\prods\\christmasshow2020\\src\\views\\newGame\\components\\newGame\\main.js",["67","68"],"import react from \"react\";\r\n\r\nimport \"./main.css\";\r\n\r\n\r\nclass NewGameView extends react.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      roomNickName: \"\",\r\n    };\r\n  }\r\n\r\n  processNewRoom = (e) => {\r\n    //sends a request to socket to create a new room\r\n    e.preventDefault();\r\n\r\n    if(this.state.roomNickName.length==0){\r\n        alert(\"Enter a room nickname bruh\")\r\n        return;\r\n    }\r\n\r\n    var genid= localStorage.getItem(\"genid\")\r\n\r\n\r\n    this.props.sendMessageToSocket({\r\n      action: \"CREATEROOM\",\r\n      data: {\r\n        roomName: this.state.roomNickName\r\n       },\r\n    });\r\n\r\n   };\r\n\r\n  handleRoomTextChange = (e) => {\r\n    this.setState({\r\n      roomNickName: e.target.value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>So lets create a room...</h1>\r\n        <h2>Please have a phone handy to play alongside the this webpage</h2>\r\n        <li>Use a desktop to play this</li>\r\n        <li>All players connect via their mobile devices</li>\r\n        <li>Lets have some fun...</li>\r\n\r\n        <form onSubmit={this.processNewRoom}>\r\n          <input\r\n            value={this.state.roomNickName}\r\n            onChange={this.handleRoomTextChange}\r\n            placeholder=\"room nickname\"\r\n            type=\"text\"\r\n          ></input>\r\n          <input type=\"submit\"></input>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewGameView;\r\n","H:\\prods\\christmasshow2020\\src\\views\\waiting\\main.js",[],"H:\\prods\\christmasshow2020\\src\\views\\newGame\\components\\joinGame\\main.js",["69","70"],"import React from 'react'\r\n\r\nimport \"./main.css\"\r\n\r\nclass JoinGame extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state={\r\n            nickName:\"\",\r\n            roomCode:''\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    \r\n    joinGame= ()=>{\r\n\r\n        if(this.state.roomCode.length==0 ||\r\n            this.state.nickName.length==0\r\n            ){\r\n                alert(\"Nickname or code not entered\")\r\n                return;\r\n            }\r\n            \r\n            var genid= localStorage.getItem(\"genid\")\r\n\r\n\r\n                this.props.sendMessageToSocket({\r\n\r\n                    action: \"JOINROOM\",\r\n                    data: {\r\n                      roomCode:this.state.roomCode,\r\n                      nickName:this.state.nickName,\r\n                      genid: genid\r\n                    },\r\n                })\r\n            \r\n\r\n        }\r\n    \r\n\r\n    handleNickName=(e)=>{\r\n        this.setState({\r\n            nickName:e.target.value\r\n        })\r\n    }\r\n\r\n    handleCode=(e)=>{\r\n        this.setState({\r\n            roomCode:e.target.value\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div id=\"joinGameContainer\">\r\n            <h1>Join Game</h1>\r\n            <div>\r\n            <input onChange={this.handleNickName} value={this.state.nickName} type=\"text\" placeholder=\"nickName\"></input>\r\n            </div>\r\n\r\n            <div>\r\n            <input onChange={this.handleCode}  value={this.state.roomCode} type=\"number\" placeholder=\"Enter room code\"></input>\r\n            </div>\r\n\r\n\r\n            <div id=\"joinRoomBtnContianer\">\r\n            <button onClick={this.joinGame}>\r\n                Join Room\r\n            </button>\r\n            </div>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default JoinGame","H:\\prods\\christmasshow2020\\src\\views\\connectedWaiting\\main.js",["71","72","73"],"H:\\prods\\christmasshow2020\\src\\views\\videoWatching\\main.js",["74"],"\r\nimport React from 'react'\r\n\r\nimport ReactPlayer from 'react-player'\r\n\r\nimport \"./main.css\"\r\n\r\n\r\nclass VideoWatching extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        \r\n    }\r\n\r\n\r\n    render(){\r\n        return (\r\n            <div style={{border:'10px solid '+this.props.backgroundColor}}  id=\"reactPlayer\">\r\n            <ReactPlayer width={'100%'} height={'100%'} playing={this.props.isPlaying} url={this.props.videoVal} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default VideoWatching;\r\n\r\n",{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":1,"column":8,"nodeType":"81","messageId":"82","endLine":1,"endColumn":12},{"ruleId":"79","severity":1,"message":"83","line":15,"column":50,"nodeType":"81","messageId":"82","endLine":15,"endColumn":54},{"ruleId":"84","severity":1,"message":"85","line":96,"column":31,"nodeType":"86","messageId":"87","endLine":96,"endColumn":33},{"ruleId":"84","severity":1,"message":"85","line":103,"column":40,"nodeType":"86","messageId":"87","endLine":103,"endColumn":42},{"ruleId":"84","severity":1,"message":"85","line":107,"column":29,"nodeType":"86","messageId":"87","endLine":107,"endColumn":31},{"ruleId":"84","severity":1,"message":"85","line":110,"column":26,"nodeType":"86","messageId":"87","endLine":110,"endColumn":28},{"ruleId":"84","severity":1,"message":"85","line":115,"column":32,"nodeType":"86","messageId":"87","endLine":115,"endColumn":34},{"ruleId":"84","severity":1,"message":"85","line":119,"column":32,"nodeType":"86","messageId":"87","endLine":119,"endColumn":34},{"ruleId":"84","severity":1,"message":"85","line":126,"column":29,"nodeType":"86","messageId":"87","endLine":126,"endColumn":31},{"ruleId":"88","severity":1,"message":"89","line":127,"column":17,"nodeType":"81","messageId":"90","endLine":127,"endColumn":24},{"ruleId":"84","severity":1,"message":"85","line":128,"column":26,"nodeType":"86","messageId":"87","endLine":128,"endColumn":28},{"ruleId":"84","severity":1,"message":"85","line":135,"column":26,"nodeType":"86","messageId":"87","endLine":135,"endColumn":28},{"ruleId":"84","severity":1,"message":"85","line":166,"column":20,"nodeType":"86","messageId":"87","endLine":166,"endColumn":22},{"ruleId":"84","severity":1,"message":"85","line":186,"column":22,"nodeType":"86","messageId":"87","endLine":186,"endColumn":24},{"ruleId":"84","severity":1,"message":"85","line":194,"column":22,"nodeType":"86","messageId":"87","endLine":194,"endColumn":24},{"ruleId":"84","severity":1,"message":"85","line":211,"column":20,"nodeType":"86","messageId":"87","endLine":211,"endColumn":22},{"ruleId":"84","severity":1,"message":"85","line":220,"column":20,"nodeType":"86","messageId":"87","endLine":220,"endColumn":22},{"ruleId":"84","severity":1,"message":"85","line":224,"column":20,"nodeType":"86","messageId":"87","endLine":224,"endColumn":22},{"ruleId":"84","severity":1,"message":"85","line":251,"column":30,"nodeType":"86","messageId":"87","endLine":251,"endColumn":32},{"ruleId":"84","severity":1,"message":"91","line":34,"column":28,"nodeType":"86","messageId":"87","endLine":34,"endColumn":30},{"ruleId":"84","severity":1,"message":"85","line":35,"column":32,"nodeType":"86","messageId":"87","endLine":35,"endColumn":34},{"ruleId":"84","severity":1,"message":"85","line":19,"column":38,"nodeType":"86","messageId":"87","endLine":19,"endColumn":40},{"ruleId":"79","severity":1,"message":"92","line":24,"column":9,"nodeType":"81","messageId":"82","endLine":24,"endColumn":14},{"ruleId":"84","severity":1,"message":"85","line":20,"column":38,"nodeType":"86","messageId":"87","endLine":20,"endColumn":40},{"ruleId":"84","severity":1,"message":"85","line":21,"column":39,"nodeType":"86","messageId":"87","endLine":21,"endColumn":41},{"ruleId":"84","severity":1,"message":"85","line":46,"column":17,"nodeType":"86","messageId":"87","endLine":46,"endColumn":19},{"ruleId":"84","severity":1,"message":"85","line":79,"column":20,"nodeType":"86","messageId":"87","endLine":79,"endColumn":22},{"ruleId":"84","severity":1,"message":"85","line":89,"column":20,"nodeType":"86","messageId":"87","endLine":89,"endColumn":22},{"ruleId":"93","severity":1,"message":"94","line":10,"column":5,"nodeType":"95","messageId":"96","endLine":13,"endColumn":6},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-redeclare","'command' is already defined.","redeclared","Expected '!==' and instead saw '!='.","'genid' is assigned a value but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation"]